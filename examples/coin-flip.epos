# Gets the head and tail of a list
# Example:
#   heads-and-tails: coin-flip-type = coin-flip({1, 2, 3, 4})
#   print(heads-and-tails.head) #=> 1
#   print(heads-and-tails.tail) #=> {2, 3, 4}

fn head(lst: list(t)): t
  elem(lst, 0)
end

# TODO: Need function default parameters
fn tail(lst: list(t), index: int = 1): list(t)
  match index then
    len(lst) -> {}
    _ -> {elem(lst, index), ..tail(lst, index + 1)}
  end
end

# TODO: Add generic types to records
record coin-flip-type(t)
  head: t
  tail: list(t)
end

fn coin-flip(lst: list(t)): coin-flip-type(t)
  @{
    head: head(lst),
    tail: tail(lst)
  }
end
